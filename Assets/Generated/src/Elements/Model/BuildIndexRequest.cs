/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.3.10 - 9026b5d99b4ec92e367b100402af1adca227de0c - 2025-08-19 05:41:06
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// Starts a new indexing operation.
    /// </summary>
    [DataContract(Name = "BuildIndexRequest")]
    public partial class BuildIndexRequest
    {
        /// <summary>
        /// Set to true to perform the index building.
        /// </summary>
        /// <value>Set to true to perform the index building.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ToIndexEnum
        {
            /// <summary>
            /// Enum DISTINCTINVENTORYITEM for value: DISTINCT_INVENTORY_ITEM
            /// </summary>
            [EnumMember(Value = "DISTINCT_INVENTORY_ITEM")]
            DISTINCTINVENTORYITEM = 1,

            /// <summary>
            /// Enum METADATA for value: METADATA
            /// </summary>
            [EnumMember(Value = "METADATA")]
            METADATA = 2
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="BuildIndexRequest" /> class.
        /// </summary>
        /// <param name="plan">Set to true to plan the index building..</param>
        /// <param name="toIndex">Set to true to perform the index building..</param>
        public BuildIndexRequest(bool plan = default(bool), List<ToIndexEnum> toIndex = default(List<ToIndexEnum>))
        {
            this.Plan = plan;
            this.ToIndex = toIndex;
        }

        /// <summary>
        /// Set to true to plan the index building.
        /// </summary>
        /// <value>Set to true to plan the index building.</value>
        [DataMember(Name = "plan", EmitDefaultValue = true)]
        public bool Plan { get; set; }

        /// <summary>
        /// Set to true to perform the index building.
        /// </summary>
        /// <value>Set to true to perform the index building.</value>
        [DataMember(Name = "toIndex", EmitDefaultValue = false)]
        public List<BuildIndexRequest.ToIndexEnum> ToIndex { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BuildIndexRequest {\n");
            sb.Append("  Plan: ").Append(Plan).Append("\n");
            sb.Append("  ToIndex: ").Append(ToIndex).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
