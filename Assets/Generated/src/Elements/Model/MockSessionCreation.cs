/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.3.10 - 9026b5d99b4ec92e367b100402af1adca227de0c - 2025-08-19 05:41:06
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// The mock session creation.
    /// </summary>
    [DataContract(Name = "MockSessionCreation")]
    public partial class MockSessionCreation
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MockSessionCreation" /> class.
        /// </summary>
        /// <param name="sessionSecret">The Session Secret to pass to subsequent requests through headers..</param>
        /// <param name="session">session.</param>
        /// <param name="userExpiresAt">The assocaited mock user will automatically be deleted at supplied time..</param>
        /// <param name="password">The randomly-assigned password for the mock user..</param>
        public MockSessionCreation(string sessionSecret = default(string), Session session = default(Session), long userExpiresAt = default(long), string password = default(string))
        {
            this.SessionSecret = sessionSecret;
            this.Session = session;
            this.UserExpiresAt = userExpiresAt;
            this.Password = password;
        }

        /// <summary>
        /// The Session Secret to pass to subsequent requests through headers.
        /// </summary>
        /// <value>The Session Secret to pass to subsequent requests through headers.</value>
        [DataMember(Name = "sessionSecret", EmitDefaultValue = false)]
        public string SessionSecret { get; set; }

        /// <summary>
        /// Gets or Sets Session
        /// </summary>
        [DataMember(Name = "session", EmitDefaultValue = false)]
        public Session Session { get; set; }

        /// <summary>
        /// The assocaited mock user will automatically be deleted at supplied time.
        /// </summary>
        /// <value>The assocaited mock user will automatically be deleted at supplied time.</value>
        [DataMember(Name = "userExpiresAt", EmitDefaultValue = false)]
        public long UserExpiresAt { get; set; }

        /// <summary>
        /// The randomly-assigned password for the mock user.
        /// </summary>
        /// <value>The randomly-assigned password for the mock user.</value>
        [DataMember(Name = "password", EmitDefaultValue = false)]
        public string Password { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MockSessionCreation {\n");
            sb.Append("  SessionSecret: ").Append(SessionSecret).Append("\n");
            sb.Append("  Session: ").Append(Session).Append("\n");
            sb.Append("  UserExpiresAt: ").Append(UserExpiresAt).Append("\n");
            sb.Append("  Password: ").Append(Password).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
