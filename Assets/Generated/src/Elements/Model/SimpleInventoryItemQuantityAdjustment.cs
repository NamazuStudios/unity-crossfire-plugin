/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.3.10 - 9026b5d99b4ec92e367b100402af1adca227de0c - 2025-08-19 05:41:06
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// SimpleInventoryItemQuantityAdjustment
    /// </summary>
    [DataContract(Name = "SimpleInventoryItemQuantityAdjustment")]
    public partial class SimpleInventoryItemQuantityAdjustment
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SimpleInventoryItemQuantityAdjustment" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SimpleInventoryItemQuantityAdjustment() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SimpleInventoryItemQuantityAdjustment" /> class.
        /// </summary>
        /// <param name="userId">The User whose inventory to modify.ß (required).</param>
        /// <param name="quantityDelta">The delta to be applied to the inventory item quantity (positive or negative) (required).</param>
        public SimpleInventoryItemQuantityAdjustment(string userId = default(string), int quantityDelta = default(int))
        {
            // to ensure "userId" is required (not null)
            if (userId == null)
            {
                throw new ArgumentNullException("userId is a required property for SimpleInventoryItemQuantityAdjustment and cannot be null");
            }
            this.UserId = userId;
            this.QuantityDelta = quantityDelta;
        }

        /// <summary>
        /// The User whose inventory to modify.ß
        /// </summary>
        /// <value>The User whose inventory to modify.ß</value>
        [DataMember(Name = "userId", IsRequired = true, EmitDefaultValue = true)]
        public string UserId { get; set; }

        /// <summary>
        /// The delta to be applied to the inventory item quantity (positive or negative)
        /// </summary>
        /// <value>The delta to be applied to the inventory item quantity (positive or negative)</value>
        [DataMember(Name = "quantityDelta", IsRequired = true, EmitDefaultValue = true)]
        public int QuantityDelta { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SimpleInventoryItemQuantityAdjustment {\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  QuantityDelta: ").Append(QuantityDelta).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
