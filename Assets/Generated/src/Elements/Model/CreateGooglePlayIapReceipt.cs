/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.3.10 - 9026b5d99b4ec92e367b100402af1adca227de0c - 2025-08-19 05:41:06
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// CreateGooglePlayIapReceipt
    /// </summary>
    [DataContract(Name = "CreateGooglePlayIapReceipt")]
    public partial class CreateGooglePlayIapReceipt
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateGooglePlayIapReceipt" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateGooglePlayIapReceipt() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateGooglePlayIapReceipt" /> class.
        /// </summary>
        /// <param name="packageName">The package name of the app. Note that this may be different from the applicationId/uniqueIdentifier which is why it should be provided with the request. (required).</param>
        /// <param name="productId">The product id purchased by the user, e.g. &#x60;com.namazustudios.example_app.pack_10_coins&#x60;. (required).</param>
        /// <param name="purchaseToken">The token issued to the user upon successful Google Play purchase transaction. (required).</param>
        public CreateGooglePlayIapReceipt(string packageName = default(string), string productId = default(string), string purchaseToken = default(string))
        {
            // to ensure "packageName" is required (not null)
            if (packageName == null)
            {
                throw new ArgumentNullException("packageName is a required property for CreateGooglePlayIapReceipt and cannot be null");
            }
            this.PackageName = packageName;
            // to ensure "productId" is required (not null)
            if (productId == null)
            {
                throw new ArgumentNullException("productId is a required property for CreateGooglePlayIapReceipt and cannot be null");
            }
            this.ProductId = productId;
            // to ensure "purchaseToken" is required (not null)
            if (purchaseToken == null)
            {
                throw new ArgumentNullException("purchaseToken is a required property for CreateGooglePlayIapReceipt and cannot be null");
            }
            this.PurchaseToken = purchaseToken;
        }

        /// <summary>
        /// The package name of the app. Note that this may be different from the applicationId/uniqueIdentifier which is why it should be provided with the request.
        /// </summary>
        /// <value>The package name of the app. Note that this may be different from the applicationId/uniqueIdentifier which is why it should be provided with the request.</value>
        [DataMember(Name = "packageName", IsRequired = true, EmitDefaultValue = true)]
        public string PackageName { get; set; }

        /// <summary>
        /// The product id purchased by the user, e.g. &#x60;com.namazustudios.example_app.pack_10_coins&#x60;.
        /// </summary>
        /// <value>The product id purchased by the user, e.g. &#x60;com.namazustudios.example_app.pack_10_coins&#x60;.</value>
        [DataMember(Name = "productId", IsRequired = true, EmitDefaultValue = true)]
        public string ProductId { get; set; }

        /// <summary>
        /// The token issued to the user upon successful Google Play purchase transaction.
        /// </summary>
        /// <value>The token issued to the user upon successful Google Play purchase transaction.</value>
        [DataMember(Name = "purchaseToken", IsRequired = true, EmitDefaultValue = true)]
        public string PurchaseToken { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateGooglePlayIapReceipt {\n");
            sb.Append("  PackageName: ").Append(PackageName).Append("\n");
            sb.Append("  ProductId: ").Append(ProductId).Append("\n");
            sb.Append("  PurchaseToken: ").Append(PurchaseToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
