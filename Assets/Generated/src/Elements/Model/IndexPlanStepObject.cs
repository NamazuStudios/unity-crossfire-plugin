/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.3.10 - 9026b5d99b4ec92e367b100402af1adca227de0c - 2025-08-19 05:41:06
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// IndexPlanStepObject
    /// </summary>
    [DataContract(Name = "IndexPlanStepObject")]
    public partial class IndexPlanStepObject
    {
        /// <summary>
        /// Defines Operation
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum OperationEnum
        {
            /// <summary>
            /// Enum CREATE for value: CREATE
            /// </summary>
            [EnumMember(Value = "CREATE")]
            CREATE = 1,

            /// <summary>
            /// Enum LEAVEASIS for value: LEAVE_AS_IS
            /// </summary>
            [EnumMember(Value = "LEAVE_AS_IS")]
            LEAVEASIS = 2,

            /// <summary>
            /// Enum REPLACE for value: REPLACE
            /// </summary>
            [EnumMember(Value = "REPLACE")]
            REPLACE = 3,

            /// <summary>
            /// Enum DELETE for value: DELETE
            /// </summary>
            [EnumMember(Value = "DELETE")]
            DELETE = 4
        }


        /// <summary>
        /// Gets or Sets Operation
        /// </summary>
        [DataMember(Name = "operation", EmitDefaultValue = false)]
        public OperationEnum? Operation { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="IndexPlanStepObject" /> class.
        /// </summary>
        /// <param name="description">description.</param>
        /// <param name="operation">operation.</param>
        /// <param name="indexMetadata">indexMetadata.</param>
        public IndexPlanStepObject(string description = default(string), OperationEnum? operation = default(OperationEnum?), IndexMetadataObject indexMetadata = default(IndexMetadataObject))
        {
            this.Description = description;
            this.Operation = operation;
            this.IndexMetadata = indexMetadata;
        }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets IndexMetadata
        /// </summary>
        [DataMember(Name = "indexMetadata", EmitDefaultValue = false)]
        public IndexMetadataObject IndexMetadata { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class IndexPlanStepObject {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Operation: ").Append(Operation).Append("\n");
            sb.Append("  IndexMetadata: ").Append(IndexMetadata).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
