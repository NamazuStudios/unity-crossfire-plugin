/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.3.10 - 9026b5d99b4ec92e367b100402af1adca227de0c - 2025-08-19 05:41:06
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// The query parameters required for the validation request.
    /// </summary>
    [DataContract(Name = "OAuth2RequestKeyValue")]
    public partial class OAuth2RequestKeyValue
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OAuth2RequestKeyValue" /> class.
        /// </summary>
        /// <param name="key">The key..</param>
        /// <param name="value">The value..</param>
        /// <param name="fromClient">If this value should be received from the client, or predefined and stored in the DB..</param>
        public OAuth2RequestKeyValue(string key = default(string), string value = default(string), bool fromClient = default(bool))
        {
            this.Key = key;
            this.Value = value;
            this.FromClient = fromClient;
        }

        /// <summary>
        /// The key.
        /// </summary>
        /// <value>The key.</value>
        [DataMember(Name = "key", EmitDefaultValue = false)]
        public string Key { get; set; }

        /// <summary>
        /// The value.
        /// </summary>
        /// <value>The value.</value>
        [DataMember(Name = "value", EmitDefaultValue = false)]
        public string Value { get; set; }

        /// <summary>
        /// If this value should be received from the client, or predefined and stored in the DB.
        /// </summary>
        /// <value>If this value should be received from the client, or predefined and stored in the DB.</value>
        [DataMember(Name = "fromClient", EmitDefaultValue = true)]
        public bool FromClient { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OAuth2RequestKeyValue {\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  FromClient: ").Append(FromClient).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
