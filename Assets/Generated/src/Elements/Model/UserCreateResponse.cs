/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.3.10 - 9026b5d99b4ec92e367b100402af1adca227de0c - 2025-08-19 05:41:06
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// UserCreateResponse
    /// </summary>
    [DataContract(Name = "UserCreateResponse")]
    public partial class UserCreateResponse
    {
        /// <summary>
        /// Defines Level
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum LevelEnum
        {
            /// <summary>
            /// Enum UNPRIVILEGED for value: UNPRIVILEGED
            /// </summary>
            [EnumMember(Value = "UNPRIVILEGED")]
            UNPRIVILEGED = 1,

            /// <summary>
            /// Enum USER for value: USER
            /// </summary>
            [EnumMember(Value = "USER")]
            USER = 2,

            /// <summary>
            /// Enum SUPERUSER for value: SUPERUSER
            /// </summary>
            [EnumMember(Value = "SUPERUSER")]
            SUPERUSER = 3
        }


        /// <summary>
        /// Gets or Sets Level
        /// </summary>
        [DataMember(Name = "level", EmitDefaultValue = false)]
        public LevelEnum? Level { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UserCreateResponse" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="email">email.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="level">level.</param>
        /// <param name="active">active.</param>
        /// <param name="facebookId">facebookId.</param>
        /// <param name="firebaseId">firebaseId.</param>
        /// <param name="appleSignInId">appleSignInId.</param>
        /// <param name="primaryPhoneNb">primaryPhoneNb.</param>
        /// <param name="profiles">profiles.</param>
        /// <param name="password">password.</param>
        /// <param name="linkedAccounts">linkedAccounts.</param>
        public UserCreateResponse(string id = default(string), string name = default(string), string email = default(string), string firstName = default(string), string lastName = default(string), LevelEnum? level = default(LevelEnum?), bool active = default(bool), string facebookId = default(string), string firebaseId = default(string), string appleSignInId = default(string), string primaryPhoneNb = default(string), List<Profile> profiles = default(List<Profile>), string password = default(string), List<string> linkedAccounts = default(List<string>))
        {
            this.Id = id;
            this.Name = name;
            this.Email = email;
            this.FirstName = firstName;
            this.LastName = lastName;
            this.Level = level;
            this.Active = active;
            this.FacebookId = facebookId;
            this.FirebaseId = firebaseId;
            this.AppleSignInId = appleSignInId;
            this.PrimaryPhoneNb = primaryPhoneNb;
            this.Profiles = profiles;
            this.Password = password;
            this.LinkedAccounts = linkedAccounts;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "email", EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name = "firstName", EmitDefaultValue = false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name = "lastName", EmitDefaultValue = false)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets Active
        /// </summary>
        [DataMember(Name = "active", EmitDefaultValue = true)]
        public bool Active { get; set; }

        /// <summary>
        /// Gets or Sets FacebookId
        /// </summary>
        [DataMember(Name = "facebookId", EmitDefaultValue = false)]
        public string FacebookId { get; set; }

        /// <summary>
        /// Gets or Sets FirebaseId
        /// </summary>
        [DataMember(Name = "firebaseId", EmitDefaultValue = false)]
        public string FirebaseId { get; set; }

        /// <summary>
        /// Gets or Sets AppleSignInId
        /// </summary>
        [DataMember(Name = "appleSignInId", EmitDefaultValue = false)]
        public string AppleSignInId { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryPhoneNb
        /// </summary>
        [DataMember(Name = "primaryPhoneNb", EmitDefaultValue = false)]
        public string PrimaryPhoneNb { get; set; }

        /// <summary>
        /// Gets or Sets Profiles
        /// </summary>
        [DataMember(Name = "profiles", EmitDefaultValue = false)]
        public List<Profile> Profiles { get; set; }

        /// <summary>
        /// Gets or Sets Password
        /// </summary>
        [DataMember(Name = "password", EmitDefaultValue = false)]
        public string Password { get; set; }

        /// <summary>
        /// Gets or Sets LinkedAccounts
        /// </summary>
        [DataMember(Name = "linkedAccounts", EmitDefaultValue = false)]
        public List<string> LinkedAccounts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UserCreateResponse {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  Level: ").Append(Level).Append("\n");
            sb.Append("  Active: ").Append(Active).Append("\n");
            sb.Append("  FacebookId: ").Append(FacebookId).Append("\n");
            sb.Append("  FirebaseId: ").Append(FirebaseId).Append("\n");
            sb.Append("  AppleSignInId: ").Append(AppleSignInId).Append("\n");
            sb.Append("  PrimaryPhoneNb: ").Append(PrimaryPhoneNb).Append("\n");
            sb.Append("  Profiles: ").Append(Profiles).Append("\n");
            sb.Append("  Password: ").Append(Password).Append("\n");
            sb.Append("  LinkedAccounts: ").Append(LinkedAccounts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
