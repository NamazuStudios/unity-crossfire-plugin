/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.3.10 - 9026b5d99b4ec92e367b100402af1adca227de0c - 2025-08-19 05:41:06
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// UserCreateRequest
    /// </summary>
    [DataContract(Name = "UserCreateRequest")]
    public partial class UserCreateRequest
    {
        /// <summary>
        /// The user&#39;s level to assign. Depending on the usage, the server may ignore this field and assign its own description.
        /// </summary>
        /// <value>The user&#39;s level to assign. Depending on the usage, the server may ignore this field and assign its own description.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum LevelEnum
        {
            /// <summary>
            /// Enum UNPRIVILEGED for value: UNPRIVILEGED
            /// </summary>
            [EnumMember(Value = "UNPRIVILEGED")]
            UNPRIVILEGED = 1,

            /// <summary>
            /// Enum USER for value: USER
            /// </summary>
            [EnumMember(Value = "USER")]
            USER = 2,

            /// <summary>
            /// Enum SUPERUSER for value: SUPERUSER
            /// </summary>
            [EnumMember(Value = "SUPERUSER")]
            SUPERUSER = 3
        }


        /// <summary>
        /// The user&#39;s level to assign. Depending on the usage, the server may ignore this field and assign its own description.
        /// </summary>
        /// <value>The user&#39;s level to assign. Depending on the usage, the server may ignore this field and assign its own description.</value>
        [DataMember(Name = "level", EmitDefaultValue = false)]
        public LevelEnum? Level { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UserCreateRequest" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="email">email.</param>
        /// <param name="primaryPhoneNb">primaryPhoneNb.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="password">The user&#39;s plaintext password, only to be provided in POST/PUT requests in the User Resource REST API interface. In the future, a dedicated REST API model may be constructed instead of using a direct User model..</param>
        /// <param name="level">The user&#39;s level to assign. Depending on the usage, the server may ignore this field and assign its own description..</param>
        /// <param name="profiles">A list of profiles to assign to this user during creation. The server will attempt to create a profile for each item in this list..</param>
        public UserCreateRequest(string name = default(string), string email = default(string), string primaryPhoneNb = default(string), string firstName = default(string), string lastName = default(string), string password = default(string), LevelEnum? level = default(LevelEnum?), List<CreateProfileSignupRequest> profiles = default(List<CreateProfileSignupRequest>))
        {
            this.Name = name;
            this.Email = email;
            this.PrimaryPhoneNb = primaryPhoneNb;
            this.FirstName = firstName;
            this.LastName = lastName;
            this.Password = password;
            this.Level = level;
            this.Profiles = profiles;
        }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "email", EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets PrimaryPhoneNb
        /// </summary>
        [DataMember(Name = "primaryPhoneNb", EmitDefaultValue = false)]
        public string PrimaryPhoneNb { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name = "firstName", EmitDefaultValue = false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name = "lastName", EmitDefaultValue = false)]
        public string LastName { get; set; }

        /// <summary>
        /// The user&#39;s plaintext password, only to be provided in POST/PUT requests in the User Resource REST API interface. In the future, a dedicated REST API model may be constructed instead of using a direct User model.
        /// </summary>
        /// <value>The user&#39;s plaintext password, only to be provided in POST/PUT requests in the User Resource REST API interface. In the future, a dedicated REST API model may be constructed instead of using a direct User model.</value>
        [DataMember(Name = "password", EmitDefaultValue = false)]
        public string Password { get; set; }

        /// <summary>
        /// A list of profiles to assign to this user during creation. The server will attempt to create a profile for each item in this list.
        /// </summary>
        /// <value>A list of profiles to assign to this user during creation. The server will attempt to create a profile for each item in this list.</value>
        [DataMember(Name = "profiles", EmitDefaultValue = false)]
        public List<CreateProfileSignupRequest> Profiles { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UserCreateRequest {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  PrimaryPhoneNb: ").Append(PrimaryPhoneNb).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  Password: ").Append(Password).Append("\n");
            sb.Append("  Level: ").Append(Level).Append("\n");
            sb.Append("  Profiles: ").Append(Profiles).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
