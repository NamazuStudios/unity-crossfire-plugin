/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.3.10 - 9026b5d99b4ec92e367b100402af1adca227de0c - 2025-08-19 05:41:06
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// Defines an editor schema which contains a JSON Schema, layout, and initial data for the editor.
    /// </summary>
    [DataContract(Name = "EditorSchema")]
    public partial class EditorSchema
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EditorSchema" /> class.
        /// </summary>
        /// <param name="data">The data itself..</param>
        /// <param name="schema">schema.</param>
        /// <param name="layout">The editor layout..</param>
        public EditorSchema(Object data = default(Object), JsonSchema schema = default(JsonSchema), List<EditorLayout> layout = default(List<EditorLayout>))
        {
            this.Data = data;
            this.Schema = schema;
            this.Layout = layout;
        }

        /// <summary>
        /// The data itself.
        /// </summary>
        /// <value>The data itself.</value>
        [DataMember(Name = "data", EmitDefaultValue = false)]
        public Object Data { get; set; }

        /// <summary>
        /// Gets or Sets Schema
        /// </summary>
        [DataMember(Name = "schema", EmitDefaultValue = false)]
        public JsonSchema Schema { get; set; }

        /// <summary>
        /// The editor layout.
        /// </summary>
        /// <value>The editor layout.</value>
        [DataMember(Name = "layout", EmitDefaultValue = false)]
        public List<EditorLayout> Layout { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EditorSchema {\n");
            sb.Append("  Data: ").Append(Data).Append("\n");
            sb.Append("  Schema: ").Append(Schema).Append("\n");
            sb.Append("  Layout: ").Append(Layout).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
