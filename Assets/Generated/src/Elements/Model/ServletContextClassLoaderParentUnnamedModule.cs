/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.3.10 - 9026b5d99b4ec92e367b100402af1adca227de0c - 2025-08-19 05:41:06
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// ServletContextClassLoaderParentUnnamedModule
    /// </summary>
    [DataContract(Name = "ServletContext_classLoader_parent_unnamedModule")]
    public partial class ServletContextClassLoaderParentUnnamedModule
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ServletContextClassLoaderParentUnnamedModule" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="descriptor">descriptor.</param>
        /// <param name="named">named.</param>
        /// <param name="annotations">annotations.</param>
        /// <param name="declaredAnnotations">declaredAnnotations.</param>
        /// <param name="packages">packages.</param>
        /// <param name="nativeAccessEnabled">nativeAccessEnabled.</param>
        /// <param name="layer">layer.</param>
        public ServletContextClassLoaderParentUnnamedModule(string name = default(string), ServletContextClassLoaderParentUnnamedModuleDescriptor descriptor = default(ServletContextClassLoaderParentUnnamedModuleDescriptor), bool named = default(bool), List<Object> annotations = default(List<Object>), List<Object> declaredAnnotations = default(List<Object>), List<string> packages = default(List<string>), bool nativeAccessEnabled = default(bool), Object layer = default(Object))
        {
            this.Name = name;
            this.Descriptor = descriptor;
            this.Named = named;
            this.Annotations = annotations;
            this.DeclaredAnnotations = declaredAnnotations;
            this.Packages = packages;
            this.NativeAccessEnabled = nativeAccessEnabled;
            this.Layer = layer;
        }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Descriptor
        /// </summary>
        [DataMember(Name = "descriptor", EmitDefaultValue = false)]
        public ServletContextClassLoaderParentUnnamedModuleDescriptor Descriptor { get; set; }

        /// <summary>
        /// Gets or Sets Named
        /// </summary>
        [DataMember(Name = "named", EmitDefaultValue = true)]
        public bool Named { get; set; }

        /// <summary>
        /// Gets or Sets Annotations
        /// </summary>
        [DataMember(Name = "annotations", EmitDefaultValue = false)]
        public List<Object> Annotations { get; set; }

        /// <summary>
        /// Gets or Sets DeclaredAnnotations
        /// </summary>
        [DataMember(Name = "declaredAnnotations", EmitDefaultValue = false)]
        public List<Object> DeclaredAnnotations { get; set; }

        /// <summary>
        /// Gets or Sets Packages
        /// </summary>
        [DataMember(Name = "packages", EmitDefaultValue = false)]
        public List<string> Packages { get; set; }

        /// <summary>
        /// Gets or Sets NativeAccessEnabled
        /// </summary>
        [DataMember(Name = "nativeAccessEnabled", EmitDefaultValue = true)]
        public bool NativeAccessEnabled { get; set; }

        /// <summary>
        /// Gets or Sets Layer
        /// </summary>
        [DataMember(Name = "layer", EmitDefaultValue = false)]
        public Object Layer { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ServletContextClassLoaderParentUnnamedModule {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Descriptor: ").Append(Descriptor).Append("\n");
            sb.Append("  Named: ").Append(Named).Append("\n");
            sb.Append("  Annotations: ").Append(Annotations).Append("\n");
            sb.Append("  DeclaredAnnotations: ").Append(DeclaredAnnotations).Append("\n");
            sb.Append("  Packages: ").Append(Packages).Append("\n");
            sb.Append("  NativeAccessEnabled: ").Append(NativeAccessEnabled).Append("\n");
            sb.Append("  Layer: ").Append(Layer).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
