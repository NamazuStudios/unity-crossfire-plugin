/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.3.10 - 9026b5d99b4ec92e367b100402af1adca227de0c - 2025-08-19 05:41:06
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// Updates a save data document. This accepts the contents of the document as well as the versioning information required to take the update properly.
    /// </summary>
    [DataContract(Name = "UpdateSaveDataDocumentRequest")]
    public partial class UpdateSaveDataDocumentRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateSaveDataDocumentRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UpdateSaveDataDocumentRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateSaveDataDocumentRequest" /> class.
        /// </summary>
        /// <param name="force">force.</param>
        /// <param name="varVersion">varVersion.</param>
        /// <param name="contents">contents (required).</param>
        public UpdateSaveDataDocumentRequest(bool force = default(bool), string varVersion = default(string), string contents = default(string))
        {
            // to ensure "contents" is required (not null)
            if (contents == null)
            {
                throw new ArgumentNullException("contents is a required property for UpdateSaveDataDocumentRequest and cannot be null");
            }
            this.Contents = contents;
            this.Force = force;
            this.VarVersion = varVersion;
        }

        /// <summary>
        /// Gets or Sets Force
        /// </summary>
        [DataMember(Name = "force", EmitDefaultValue = true)]
        public bool Force { get; set; }

        /// <summary>
        /// Gets or Sets VarVersion
        /// </summary>
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public string VarVersion { get; set; }

        /// <summary>
        /// Gets or Sets Contents
        /// </summary>
        [DataMember(Name = "contents", IsRequired = true, EmitDefaultValue = true)]
        public string Contents { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateSaveDataDocumentRequest {\n");
            sb.Append("  Force: ").Append(Force).Append("\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("  Contents: ").Append(Contents).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
