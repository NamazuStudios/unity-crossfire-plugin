/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.3.10 - 9026b5d99b4ec92e367b100402af1adca227de0c - 2025-08-19 05:41:06
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// Rank
    /// </summary>
    [DataContract(Name = "Rank")]
    public partial class Rank
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Rank" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Rank() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Rank" /> class.
        /// </summary>
        /// <param name="position">The position of the associated score in the result set..</param>
        /// <param name="score">score (required).</param>
        public Rank(long position = default(long), Score score = default(Score))
        {
            // to ensure "score" is required (not null)
            if (score == null)
            {
                throw new ArgumentNullException("score is a required property for Rank and cannot be null");
            }
            this.Score = score;
            this.Position = position;
        }

        /// <summary>
        /// The position of the associated score in the result set.
        /// </summary>
        /// <value>The position of the associated score in the result set.</value>
        [DataMember(Name = "position", EmitDefaultValue = false)]
        public long Position { get; set; }

        /// <summary>
        /// Gets or Sets Score
        /// </summary>
        [DataMember(Name = "score", IsRequired = true, EmitDefaultValue = true)]
        public Score Score { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Rank {\n");
            sb.Append("  Position: ").Append(Position).Append("\n");
            sb.Append("  Score: ").Append(Score).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
