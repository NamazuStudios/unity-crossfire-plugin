/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.3.10 - 9026b5d99b4ec92e367b100402af1adca227de0c - 2025-08-19 05:41:06
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// Represents the result of a reward issuance redemption, housing either the resultant RewardIssuance or the error details.
    /// </summary>
    [DataContract(Name = "RewardIssuanceRedemptionResult")]
    public partial class RewardIssuanceRedemptionResult
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RewardIssuanceRedemptionResult" /> class.
        /// </summary>
        /// <param name="rewardIssuanceId">The id as originally provided in the request..</param>
        /// <param name="rewardIssuance">rewardIssuance.</param>
        /// <param name="inventoryItem">inventoryItem.</param>
        /// <param name="errorDetails">Should the redemption fail, the error details. Otherwise, null..</param>
        public RewardIssuanceRedemptionResult(string rewardIssuanceId = default(string), RewardIssuance rewardIssuance = default(RewardIssuance), InventoryItem inventoryItem = default(InventoryItem), string errorDetails = default(string))
        {
            this.RewardIssuanceId = rewardIssuanceId;
            this.RewardIssuance = rewardIssuance;
            this.InventoryItem = inventoryItem;
            this.ErrorDetails = errorDetails;
        }

        /// <summary>
        /// The id as originally provided in the request.
        /// </summary>
        /// <value>The id as originally provided in the request.</value>
        [DataMember(Name = "rewardIssuanceId", EmitDefaultValue = false)]
        public string RewardIssuanceId { get; set; }

        /// <summary>
        /// Gets or Sets RewardIssuance
        /// </summary>
        [DataMember(Name = "rewardIssuance", EmitDefaultValue = false)]
        public RewardIssuance RewardIssuance { get; set; }

        /// <summary>
        /// Gets or Sets InventoryItem
        /// </summary>
        [DataMember(Name = "inventoryItem", EmitDefaultValue = false)]
        public InventoryItem InventoryItem { get; set; }

        /// <summary>
        /// Should the redemption fail, the error details. Otherwise, null.
        /// </summary>
        /// <value>Should the redemption fail, the error details. Otherwise, null.</value>
        [DataMember(Name = "errorDetails", EmitDefaultValue = false)]
        public string ErrorDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RewardIssuanceRedemptionResult {\n");
            sb.Append("  RewardIssuanceId: ").Append(RewardIssuanceId).Append("\n");
            sb.Append("  RewardIssuance: ").Append(RewardIssuance).Append("\n");
            sb.Append("  InventoryItem: ").Append(InventoryItem).Append("\n");
            sb.Append("  ErrorDetails: ").Append(ErrorDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
