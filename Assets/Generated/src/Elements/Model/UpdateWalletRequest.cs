/*
 * ECI Elements
 *
 * ECI Elements Core APIs
 *
 * The version of the OpenAPI document: 3.3.10 - 9026b5d99b4ec92e367b100402af1adca227de0c - 2025-08-19 05:41:06
 * Contact: info@namazustudios.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Elements.Client.OpenAPIDateConverter;

namespace Elements.Model
{
    /// <summary>
    /// Updates a Wallet.
    /// </summary>
    [DataContract(Name = "UpdateWalletRequest")]
    public partial class UpdateWalletRequest
    {
        /// <summary>
        /// The networks associated with this wallet. All must support the Wallet&#39;s protocol.
        /// </summary>
        /// <value>The networks associated with this wallet. All must support the Wallet&#39;s protocol.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum NetworksEnum
        {
            /// <summary>
            /// Enum NEO for value: NEO
            /// </summary>
            [EnumMember(Value = "NEO")]
            NEO = 1,

            /// <summary>
            /// Enum NEOTEST for value: NEO_TEST
            /// </summary>
            [EnumMember(Value = "NEO_TEST")]
            NEOTEST = 2,

            /// <summary>
            /// Enum ETHEREUM for value: ETHEREUM
            /// </summary>
            [EnumMember(Value = "ETHEREUM")]
            ETHEREUM = 3,

            /// <summary>
            /// Enum ETHEREUMTEST for value: ETHEREUM_TEST
            /// </summary>
            [EnumMember(Value = "ETHEREUM_TEST")]
            ETHEREUMTEST = 4,

            /// <summary>
            /// Enum BSC for value: BSC
            /// </summary>
            [EnumMember(Value = "BSC")]
            BSC = 5,

            /// <summary>
            /// Enum BSCTEST for value: BSC_TEST
            /// </summary>
            [EnumMember(Value = "BSC_TEST")]
            BSCTEST = 6,

            /// <summary>
            /// Enum POLYGON for value: POLYGON
            /// </summary>
            [EnumMember(Value = "POLYGON")]
            POLYGON = 7,

            /// <summary>
            /// Enum POLYGONTEST for value: POLYGON_TEST
            /// </summary>
            [EnumMember(Value = "POLYGON_TEST")]
            POLYGONTEST = 8,

            /// <summary>
            /// Enum SOLANA for value: SOLANA
            /// </summary>
            [EnumMember(Value = "SOLANA")]
            SOLANA = 9,

            /// <summary>
            /// Enum SOLANATEST for value: SOLANA_TEST
            /// </summary>
            [EnumMember(Value = "SOLANA_TEST")]
            SOLANATEST = 10,

            /// <summary>
            /// Enum FLOW for value: FLOW
            /// </summary>
            [EnumMember(Value = "FLOW")]
            FLOW = 11,

            /// <summary>
            /// Enum FLOWTEST for value: FLOW_TEST
            /// </summary>
            [EnumMember(Value = "FLOW_TEST")]
            FLOWTEST = 12,

            /// <summary>
            /// Enum NEAR for value: NEAR
            /// </summary>
            [EnumMember(Value = "NEAR")]
            NEAR = 13,

            /// <summary>
            /// Enum NEARTEST for value: NEAR_TEST
            /// </summary>
            [EnumMember(Value = "NEAR_TEST")]
            NEARTEST = 14
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateWalletRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UpdateWalletRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateWalletRequest" /> class.
        /// </summary>
        /// <param name="displayName">The new display name of the wallet..</param>
        /// <param name="preferredAccount">The default identity. Must not be larger than the count of identities..</param>
        /// <param name="networks">The networks associated with this wallet. All must support the Wallet&#39;s protocol. (required).</param>
        public UpdateWalletRequest(string displayName = default(string), int preferredAccount = default(int), List<NetworksEnum> networks = default(List<NetworksEnum>))
        {
            // to ensure "networks" is required (not null)
            if (networks == null)
            {
                throw new ArgumentNullException("networks is a required property for UpdateWalletRequest and cannot be null");
            }
            this.Networks = networks;
            this.DisplayName = displayName;
            this.PreferredAccount = preferredAccount;
        }

        /// <summary>
        /// The new display name of the wallet.
        /// </summary>
        /// <value>The new display name of the wallet.</value>
        [DataMember(Name = "displayName", EmitDefaultValue = false)]
        public string DisplayName { get; set; }

        /// <summary>
        /// The default identity. Must not be larger than the count of identities.
        /// </summary>
        /// <value>The default identity. Must not be larger than the count of identities.</value>
        [DataMember(Name = "preferredAccount", EmitDefaultValue = false)]
        public int PreferredAccount { get; set; }

        /// <summary>
        /// The networks associated with this wallet. All must support the Wallet&#39;s protocol.
        /// </summary>
        /// <value>The networks associated with this wallet. All must support the Wallet&#39;s protocol.</value>
        [DataMember(Name = "networks", IsRequired = true, EmitDefaultValue = true)]
        public List<UpdateWalletRequest.NetworksEnum> Networks { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateWalletRequest {\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  PreferredAccount: ").Append(PreferredAccount).Append("\n");
            sb.Append("  Networks: ").Append(Networks).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
